// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Pervasives = require("bs-platform/lib/js/pervasives.js");

function buildCssRecord(alignContent, alignItems, alignSelf, all, animation, animationDelay, animationDirection, animationDuration, animationFillMode, animationIterationCount, animationName, animationPlayState, animationTimingFunction, backfaceVisibility, background, backgroundAttachment, backgroundBlendMode, backgroundClip, backgroundColor, backgroundImage, backgroundOrigin, backgroundPosition, backgroundRepeat, backgroundSize, border, borderBottom, borderBottomColor, borderBottomLeftRadius, borderBottomRightRadius, borderBottomStyle, borderBottomWidth, borderCollapse, borderColor, borderImage, borderImageOutset, borderImageRepeat, borderImageSlice, borderImageSource, borderImageWidth, borderLeft, borderLeftColor, borderLeftStyle, borderLeftWidth, borderRadius, borderRight, borderRightColor, borderRightStyle, borderRightWidth, borderSpacing, borderStyle, borderTop, borderTopColor, borderTopLeftRadius, borderTopRightRadius, borderTopStyle, borderTopWidth, borderWidth, bottom, boxDecorationBreak, boxShadow, boxSizing, breakAfter, breakBefore, breakInside, captionSide, caretColor, charset, clear, clip, color, columnCount, columnFill, columnGap, columnRule, columnRuleColor, columnRuleStyle, columnRuleWidth, columnSpan, columnWidth, columns, content, counterIncrement, counterReset, cursor, direction, display, emptyCells, filter, flex, flexBasis, flexDirection, flexFlow, flexGrow, flexShrink, flexWrap, $$float, font, fontFace, fontFamily, fontFeatureSettings, fontFeatureValues, fontKerning, fontLanguageOverride, fontSize, fontSizeAdjust, fontStretch, fontStyle, fontSynthesis, fontVariant, fontVariantAlternates, fontVariantCaps, fontVariantEastAsian, fontVariantLigatures, fontVariantNumeric, fontVariantPosition, fontWeight, grid, gridArea, gridAutoColumns, gridAutoFlow, gridAutoRows, gridColumn, gridColumnEnd, gridColumnGap, gridColumnStart, gridGap, gridRow, gridRowEnd, gridRowGap, gridRowStart, gridTemplate, gridTemplateAreas, gridTemplateColumns, girdTemplateRows, hangingPunctuation, height, hyphens, imageRendering, $$import, isolation, justifyContent, keyframes, left, letterSpacing, lineBreak, lineHeight, listStyle, listStyleImage, listStylePosition, listStyleType, margin, marginBottom, marginLeft, marginRight, marginTop, maxHeight, maxWidth, media, minHeight, minWidth, mixBlendMode, objectFit, objectPosition, opacity, order, orphans, outline, outlineColor, outlineOffset, outlineStyle, outlineWidth, overflow, overflowWrap, overflowX, overflowY, padding, paddingBottom, paddingLeft, paddingRight, paddingTop, pageBreakAfter, pageBreakBefore, pageBreakInside, perspective, perspectiveOrigin, pointerEvents, position, quotes, resize, right, tabSize, tableLayout, textAlign, textAlignLast, textCombineUpright, textDecoration, textDecorationColor, textDecorationLine, textDecorationStyle, textIndent, textJustify, textOrientation, textOverflow, textShadow, textTransform, textUnderlinePosition, top, transform, transformOrigin, transformStyle, transition, transitionDelay, transitionDuration, transitionProperty, transitionTimingFunction, unicodeBidi, userSelect, verticalAlign, visibility, whiteSpace, widows, width, wordBreak, wordSpacing, wordWrap, writingMode, zIndex, _) {
  return /* record */[
          /* alignContent */alignContent,
          /* alignItems */alignItems,
          /* alignSelf */alignSelf,
          /* all */all,
          /* animation */animation,
          /* animationDelay */animationDelay,
          /* animationDirection */animationDirection,
          /* animationDuration */animationDuration,
          /* animationFillMode */animationFillMode,
          /* animationIterationCount */animationIterationCount,
          /* animationName */animationName,
          /* animationPlayState */animationPlayState,
          /* animationTimingFunction */animationTimingFunction,
          /* backfaceVisibility */backfaceVisibility,
          /* background */background,
          /* backgroundAttachment */backgroundAttachment,
          /* backgroundBlendMode */backgroundBlendMode,
          /* backgroundClip */backgroundClip,
          /* backgroundColor */backgroundColor,
          /* backgroundImage */backgroundImage,
          /* backgroundOrigin */backgroundOrigin,
          /* backgroundPosition */backgroundPosition,
          /* backgroundRepeat */backgroundRepeat,
          /* backgroundSize */backgroundSize,
          /* border */border,
          /* borderBottom */borderBottom,
          /* borderBottomColor */borderBottomColor,
          /* borderBottomLeftRadius */borderBottomLeftRadius,
          /* borderBottomRightRadius */borderBottomRightRadius,
          /* borderBottomStyle */borderBottomStyle,
          /* borderBottomWidth */borderBottomWidth,
          /* borderCollapse */borderCollapse,
          /* borderColor */borderColor,
          /* borderImage */borderImage,
          /* borderImageOutset */borderImageOutset,
          /* borderImageRepeat */borderImageRepeat,
          /* borderImageSlice */borderImageSlice,
          /* borderImageSource */borderImageSource,
          /* borderImageWidth */borderImageWidth,
          /* borderLeft */borderLeft,
          /* borderLeftColor */borderLeftColor,
          /* borderLeftStyle */borderLeftStyle,
          /* borderLeftWidth */borderLeftWidth,
          /* borderRadius */borderRadius,
          /* borderRight */borderRight,
          /* borderRightColor */borderRightColor,
          /* borderRightStyle */borderRightStyle,
          /* borderRightWidth */borderRightWidth,
          /* borderSpacing */borderSpacing,
          /* borderStyle */borderStyle,
          /* borderTop */borderTop,
          /* borderTopColor */borderTopColor,
          /* borderTopLeftRadius */borderTopLeftRadius,
          /* borderTopRightRadius */borderTopRightRadius,
          /* borderTopStyle */borderTopStyle,
          /* borderTopWidth */borderTopWidth,
          /* borderWidth */borderWidth,
          /* bottom */bottom,
          /* boxDecorationBreak */boxDecorationBreak,
          /* boxShadow */boxShadow,
          /* boxSizing */boxSizing,
          /* breakAfter */breakAfter,
          /* breakBefore */breakBefore,
          /* breakInside */breakInside,
          /* captionSide */captionSide,
          /* caretColor */caretColor,
          /* charset */charset,
          /* clear */clear,
          /* clip */clip,
          /* color */color,
          /* columnCount */columnCount,
          /* columnFill */columnFill,
          /* columnGap */columnGap,
          /* columnRule */columnRule,
          /* columnRuleColor */columnRuleColor,
          /* columnRuleStyle */columnRuleStyle,
          /* columnRuleWidth */columnRuleWidth,
          /* columnSpan */columnSpan,
          /* columnWidth */columnWidth,
          /* columns */columns,
          /* content */content,
          /* counterIncrement */counterIncrement,
          /* counterReset */counterReset,
          /* cursor */cursor,
          /* direction */direction,
          /* display */display,
          /* emptyCells */emptyCells,
          /* filter */filter,
          /* flex */flex,
          /* flexBasis */flexBasis,
          /* flexDirection */flexDirection,
          /* flexFlow */flexFlow,
          /* flexGrow */flexGrow,
          /* flexShrink */flexShrink,
          /* flexWrap */flexWrap,
          /* float */$$float,
          /* font */font,
          /* fontFace */fontFace,
          /* fontFamily */fontFamily,
          /* fontFeatureSettings */fontFeatureSettings,
          /* fontFeatureValues */fontFeatureValues,
          /* fontKerning */fontKerning,
          /* fontLanguageOverride */fontLanguageOverride,
          /* fontSize */fontSize,
          /* fontSizeAdjust */fontSizeAdjust,
          /* fontStretch */fontStretch,
          /* fontStyle */fontStyle,
          /* fontSynthesis */fontSynthesis,
          /* fontVariant */fontVariant,
          /* fontVariantAlternates */fontVariantAlternates,
          /* fontVariantCaps */fontVariantCaps,
          /* fontVariantEastAsian */fontVariantEastAsian,
          /* fontVariantLigatures */fontVariantLigatures,
          /* fontVariantNumeric */fontVariantNumeric,
          /* fontVariantPosition */fontVariantPosition,
          /* fontWeight */fontWeight,
          /* grid */grid,
          /* gridArea */gridArea,
          /* gridAutoColumns */gridAutoColumns,
          /* gridAutoFlow */gridAutoFlow,
          /* gridAutoRows */gridAutoRows,
          /* gridColumn */gridColumn,
          /* gridColumnEnd */gridColumnEnd,
          /* gridColumnGap */gridColumnGap,
          /* gridColumnStart */gridColumnStart,
          /* gridGap */gridGap,
          /* gridRow */gridRow,
          /* gridRowEnd */gridRowEnd,
          /* gridRowGap */gridRowGap,
          /* gridRowStart */gridRowStart,
          /* gridTemplate */gridTemplate,
          /* gridTemplateAreas */gridTemplateAreas,
          /* gridTemplateColumns */gridTemplateColumns,
          /* girdTemplateRows */girdTemplateRows,
          /* hangingPunctuation */hangingPunctuation,
          /* height */height,
          /* hyphens */hyphens,
          /* imageRendering */imageRendering,
          /* import */$$import,
          /* isolation */isolation,
          /* justifyContent */justifyContent,
          /* keyframes */keyframes,
          /* left */left,
          /* letterSpacing */letterSpacing,
          /* lineBreak */lineBreak,
          /* lineHeight */lineHeight,
          /* listStyle */listStyle,
          /* listStyleImage */listStyleImage,
          /* listStylePosition */listStylePosition,
          /* listStyleType */listStyleType,
          /* margin */margin,
          /* marginBottom */marginBottom,
          /* marginLeft */marginLeft,
          /* marginRight */marginRight,
          /* marginTop */marginTop,
          /* maxHeight */maxHeight,
          /* maxWidth */maxWidth,
          /* media */media,
          /* minHeight */minHeight,
          /* minWidth */minWidth,
          /* mixBlendMode */mixBlendMode,
          /* objectFit */objectFit,
          /* objectPosition */objectPosition,
          /* opacity */opacity,
          /* order */order,
          /* orphans */orphans,
          /* outline */outline,
          /* outlineColor */outlineColor,
          /* outlineOffset */outlineOffset,
          /* outlineStyle */outlineStyle,
          /* outlineWidth */outlineWidth,
          /* overflow */overflow,
          /* overflowWrap */overflowWrap,
          /* overflowX */overflowX,
          /* overflowY */overflowY,
          /* padding */padding,
          /* paddingBottom */paddingBottom,
          /* paddingLeft */paddingLeft,
          /* paddingRight */paddingRight,
          /* paddingTop */paddingTop,
          /* pageBreakAfter */pageBreakAfter,
          /* pageBreakBefore */pageBreakBefore,
          /* pageBreakInside */pageBreakInside,
          /* perspective */perspective,
          /* perspectiveOrigin */perspectiveOrigin,
          /* pointerEvents */pointerEvents,
          /* position */position,
          /* quotes */quotes,
          /* resize */resize,
          /* right */right,
          /* tabSize */tabSize,
          /* tableLayout */tableLayout,
          /* textAlign */textAlign,
          /* textAlignLast */textAlignLast,
          /* textCombineUpright */textCombineUpright,
          /* textDecoration */textDecoration,
          /* textDecorationColor */textDecorationColor,
          /* textDecorationLine */textDecorationLine,
          /* textDecorationStyle */textDecorationStyle,
          /* textIndent */textIndent,
          /* textJustify */textJustify,
          /* textOrientation */textOrientation,
          /* textOverflow */textOverflow,
          /* textShadow */textShadow,
          /* textTransform */textTransform,
          /* textUnderlinePosition */textUnderlinePosition,
          /* top */top,
          /* transform */transform,
          /* transformOrigin */transformOrigin,
          /* transformStyle */transformStyle,
          /* transition */transition,
          /* transitionDelay */transitionDelay,
          /* transitionDuration */transitionDuration,
          /* transitionProperty */transitionProperty,
          /* transitionTimingFunction */transitionTimingFunction,
          /* unicodeBidi */unicodeBidi,
          /* userSelect */userSelect,
          /* verticalAlign */verticalAlign,
          /* visibility */visibility,
          /* whiteSpace */whiteSpace,
          /* widows */widows,
          /* width */width,
          /* wordBreak */wordBreak,
          /* wordSpacing */wordSpacing,
          /* wordWrap */wordWrap,
          /* writingMode */writingMode,
          /* zIndex */zIndex
        ];
}

function colorToString(param) {
  if (typeof param === "number") {
    switch (param) {
      case 0 : 
          return "#F0F8FF";
      case 1 : 
          return "#FAEBD7";
      case 3 : 
          return "#7FFFD4";
      case 4 : 
          return "#F0FFFF";
      case 5 : 
          return "#F5F5DC";
      case 6 : 
          return "#FFE4C4";
      case 7 : 
          return "#000000";
      case 8 : 
          return "#FFEBCD";
      case 9 : 
          return "#0000FF";
      case 10 : 
          return "#8A2BE2";
      case 11 : 
          return "#A52A2A";
      case 12 : 
          return "#DEB887";
      case 13 : 
          return "#5F9EA0";
      case 14 : 
          return "#7FFF00";
      case 15 : 
          return "#D2691E";
      case 16 : 
          return "#FF7F50";
      case 17 : 
          return "#6495ED";
      case 18 : 
          return "#FFF8DC";
      case 19 : 
          return "#DC143C";
      case 2 : 
      case 20 : 
          return "#00FFFF";
      case 21 : 
          return "#00008B";
      case 22 : 
          return "#008B8B";
      case 23 : 
          return "#B8860B";
      case 24 : 
      case 25 : 
          return "#A9A9A9";
      case 26 : 
          return "#006400";
      case 27 : 
          return "#BDB76B";
      case 28 : 
          return "#8B008B";
      case 29 : 
          return "#556B2F";
      case 30 : 
          return "#FF8C00";
      case 31 : 
          return "#9932CC";
      case 32 : 
          return "#8B0000";
      case 33 : 
          return "#E9967A";
      case 34 : 
          return "#8FBC8F";
      case 35 : 
          return "#483D8B";
      case 36 : 
      case 37 : 
          return "#2F4F4F";
      case 38 : 
          return "#00CED1";
      case 39 : 
          return "#9400D3";
      case 40 : 
          return "#FF1493";
      case 41 : 
          return "#00BFFF";
      case 42 : 
      case 43 : 
          return "#696969";
      case 44 : 
          return "#1E90FF";
      case 45 : 
          return "#B22222";
      case 46 : 
          return "#FFFAF0";
      case 47 : 
          return "#228B22";
      case 49 : 
          return "#DCDCDC";
      case 50 : 
          return "#F8F8FF";
      case 51 : 
          return "#FFD700";
      case 52 : 
          return "#DAA520";
      case 53 : 
      case 54 : 
          return "#808080";
      case 55 : 
          return "#008000";
      case 56 : 
          return "#ADFF2F";
      case 57 : 
          return "#F0FFF0";
      case 58 : 
          return "#FF69B4";
      case 59 : 
          return "#CD5C5C";
      case 60 : 
          return "#4B0082";
      case 61 : 
          return "#FFFFF0";
      case 62 : 
          return "#F0E68C";
      case 63 : 
          return "#E6E6FA";
      case 64 : 
          return "#FFF0F5";
      case 65 : 
          return "#7CFC00";
      case 66 : 
          return "#FFFACD";
      case 67 : 
          return "#ADD8E6";
      case 68 : 
          return "#F08080";
      case 69 : 
          return "#E0FFFF";
      case 70 : 
          return "#FAFAD2";
      case 71 : 
      case 72 : 
          return "#D3D3D3";
      case 73 : 
          return "#90EE90";
      case 74 : 
          return "#FFB6C1";
      case 75 : 
          return "#FFA07A";
      case 76 : 
          return "#20B2AA";
      case 77 : 
          return "#87CEFA";
      case 78 : 
      case 79 : 
          return "#778899";
      case 80 : 
          return "#B0C4DE";
      case 81 : 
          return "#FFFFE0";
      case 82 : 
          return "#00FF00";
      case 83 : 
          return "#32CD32";
      case 84 : 
          return "#FAF0E6";
      case 48 : 
      case 85 : 
          return "#FF00FF";
      case 86 : 
          return "#800000";
      case 87 : 
          return "#66CDAA";
      case 88 : 
          return "#0000CD";
      case 89 : 
          return "#BA55D3";
      case 90 : 
          return "#9370DB";
      case 91 : 
          return "#3CB371";
      case 92 : 
          return "#7B68EE";
      case 93 : 
          return "#00FA9A";
      case 94 : 
          return "#48D1CC";
      case 95 : 
          return "#C71585";
      case 96 : 
          return "#191970";
      case 97 : 
          return "#F5FFFA";
      case 98 : 
          return "#FFE4E1";
      case 99 : 
          return "#FFE4B5";
      case 100 : 
          return "#FFDEAD";
      case 101 : 
          return "#000080";
      case 102 : 
          return "#FDF5E6";
      case 103 : 
          return "#808000";
      case 104 : 
          return "#6B8E23";
      case 105 : 
          return "#FFA500";
      case 106 : 
          return "#FF4500";
      case 107 : 
          return "#DA70D6";
      case 108 : 
          return "#EEE8AA";
      case 109 : 
          return "#98FB98";
      case 110 : 
          return "#AFEEEE";
      case 111 : 
          return "#DB7093";
      case 112 : 
          return "#FFEFD5";
      case 113 : 
          return "#FFDAB9";
      case 114 : 
          return "#CD853F";
      case 115 : 
          return "#FFC0CB";
      case 116 : 
          return "#DDA0DD";
      case 117 : 
          return "#B0E0E6";
      case 118 : 
          return "#800080";
      case 119 : 
          return "#663399";
      case 120 : 
          return "#FF0000";
      case 121 : 
          return "#BC8F8F";
      case 122 : 
          return "#4169E1";
      case 123 : 
          return "#8B4513";
      case 124 : 
          return "#FA8072";
      case 125 : 
          return "#F4A460";
      case 126 : 
          return "#2E8B57";
      case 127 : 
          return "#FFF5EE";
      case 128 : 
          return "#A0522D";
      case 129 : 
          return "#C0C0C0";
      case 130 : 
          return "#87CEEB";
      case 131 : 
          return "#6A5ACD";
      case 132 : 
      case 133 : 
          return "#708090";
      case 134 : 
          return "#FFFAFA";
      case 135 : 
          return "#00FF7F";
      case 136 : 
          return "#4682B4";
      case 137 : 
          return "#D2B48C";
      case 138 : 
          return "#008080";
      case 139 : 
          return "#D8BFD8";
      case 140 : 
          return "#FF6347";
      case 141 : 
          return "#40E0D0";
      case 142 : 
          return "#EE82EE";
      case 143 : 
          return "#F5DEB3";
      case 144 : 
          return "#FFFFFF";
      case 145 : 
          return "#F5F5F5";
      case 146 : 
          return "#FFFF00";
      case 147 : 
          return "#9ACD32";
      
    }
  } else {
    switch (param.tag | 0) {
      case 0 : 
          return "#" + param[0];
      case 1 : 
          return "rgb(" + (String(param[0]) + (", " + (String(param[1]) + (", " + (String(param[2]) + ")")))));
      case 2 : 
          return "rgb(" + (String(param[0]) + (", " + (String(param[1]) + (", " + (String(param[2]) + (", " + (Pervasives.string_of_float(param[3]) + ")")))))));
      case 3 : 
          return "hsl(" + (String(param[0]) + (", " + (String(param[1]) + ("%, " + (String(param[2]) + "%)")))));
      case 4 : 
          return "hsl(" + (String(param[0]) + (", " + (String(param[1]) + ("%, " + (String(param[2]) + ("%," + (Pervasives.string_of_float(param[3]) + ")")))))));
      
    }
  }
}

exports.buildCssRecord = buildCssRecord;
exports.colorToString = colorToString;
/* No side effect */
